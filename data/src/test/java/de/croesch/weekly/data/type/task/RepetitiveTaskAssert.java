package de.croesch.weekly.data.type.task;

import org.assertj.core.api.AbstractAssert;


/**
 * {@link RepetitiveTask} specific assertions - Generated by CustomAssertionGenerator.
 */
public class RepetitiveTaskAssert extends AbstractAssert<RepetitiveTaskAssert, RepetitiveTask> {

  /**
   * Creates a new <code>{@link RepetitiveTaskAssert}</code> to make assertions on actual RepetitiveTask.
   * @param actual the RepetitiveTask we want to make assertions on.
   */
  public RepetitiveTaskAssert(RepetitiveTask actual) {
    super(actual, RepetitiveTaskAssert.class);
  }

  /**
   * An entry point for RepetitiveTaskAssert to follow AssertJ standard <code>assertThat()</code> statements.<br>
   * With a static import, one can write directly: <code>assertThat(myRepetitiveTask)</code> and get specific assertion with code completion.
   * @param actual the RepetitiveTask we want to make assertions on.
   * @return a new <code>{@link RepetitiveTaskAssert}</code>
   */
  public static RepetitiveTaskAssert assertThat(RepetitiveTask actual) {
    return new RepetitiveTaskAssert(actual);
  }

  /**
   * Verifies that the actual RepetitiveTask's description is equal to the given one.
   * @param description the given description to compare the actual RepetitiveTask's description to.
   * @return this assertion object.
   * @throws AssertionError - if the actual RepetitiveTask's description is not equal to the given one.
   */
  public RepetitiveTaskAssert hasDescription(String description) {
    // check that actual RepetitiveTask we want to make assertions on is not null.
    isNotNull();

    // overrides the default error message with a more explicit one
    String assertjErrorMessage = "\nExpected description of:\n  <%s>\nto be:\n  <%s>\nbut was:\n  <%s>";
    
    // null safe check
    String actualDescription = actual.getDescription();
    if (!org.assertj.core.util.Objects.areEqual(actualDescription, description)) {
      failWithMessage(assertjErrorMessage, actual, description, actualDescription);
    }

    // return the current assertion for method chaining
    return this;
  }

}
